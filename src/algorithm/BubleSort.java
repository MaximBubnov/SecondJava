package algorithm;

/**
 * Алгоритм проходит массив от начала и до конца, сравнивая попарно соседние элементы,
 * Если элементы стоят в неправильном порядке, то они меняются местами, таким образом, после первого прохода на конце массива
 * оказывается максимальный элемент (для сортировки по возрастанию).
 * Затем проход массива повторяется, и на предпоследнем месте оказывается другой наибольший после максимального элемент и т.д.
 * В итоге, наименьший элемент постепенно перемещается  к началу массива («всплывает» до нужной позиции как пузырёк в воде).
 */
public class BubleSort {

    public static void main(String[] args) {

        int[] mass = new int[10];

        for (int i = 0; i <mass.length ; i++) {
            mass[i] = (int)(Math.random() * 25);
        }

        bubbleSort(mass);

        for (int i = 0; i < mass.length ; i++) {
            System.out.print(mass[i] + " ");
        }
    }

    private static void bubbleSort(int[] arr) {
        /*Внешний цикл каждый раз сокращает фрагмент массива,
      так как внутренний цикл каждый раз ставит в конец
      фрагмента максимальный элемент*/

        for (int i = arr.length - 1; i > 0 ; i--) {
            for (int j = 0; j < i; j++) {
                /*Внешний цикл каждый раз сокращает фрагмент массива,
      так как внутренний цикл каждый раз ставит в конец
      фрагмента максимальный элемент*/

                if(arr[j] > arr[j + 1]) {
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j+1] = temp;
                }
            }

        }
    }
}
