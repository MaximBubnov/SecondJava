package algorithm;

/**
 * СОРТИРОВКА ВСТАВКАМИ.
 * Массив делится на два под-массива. 1 - отсортированный, 2 - неотсортированный.
 * По умолчанию первый элемент находится в отсортированной части. Все оставшие элементы - неотсортированной.
 * В неотсортированной части ищется минимальный элемент. Потом он записывается в переменную. И следующая цель вставить его в
 * отсортированную часть. Методом перебора ищется место для этой переменной, когда находится массив смещается. Переменная вставляется.
 * Отсортированная часть увеличилась.
 *
 */
public class InsertionSort {

    public static void main(String[] args) {

        int[] mass = new int[10];

        for (int i = 0; i < mass.length ; i++) {
            mass[i] = (int) (Math.random() * 25);
        }

        insSort(mass);

        System.out.println();

        for (int i = 0; i < mass.length ; i++) {
            System.out.print(mass[i] + " ");
        }

    }

    private static void insSort(int[] mass) {
        int temp, j;

        for (int i = 0; i < mass.length ; i++) {
            temp = mass[i]; //1 элемент массива (2 по списку). Т.к предполагается, что 0 элемент массива минимальный.
            for (j = i - 1; j >=0 && mass[j] > temp ; j--) { // сравниваем последующий с предыдущим

                mass[j + 1] = mass[j]; // меняем их местами, если 2 парам for = true
            }

            mass[j + 1] = temp;
        }
    }
}
